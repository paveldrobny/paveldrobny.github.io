[{"C:\\Users\\Pavel\\Desktop\\paveldrobny.github.io\\src\\index.js":"1","C:\\Users\\Pavel\\Desktop\\paveldrobny.github.io\\src\\reportWebVitals.js":"2","C:\\Users\\Pavel\\Desktop\\paveldrobny.github.io\\src\\App.js":"3","C:\\Users\\Pavel\\Desktop\\paveldrobny.github.io\\src\\components\\Header\\Header.js":"4","C:\\Users\\Pavel\\Desktop\\paveldrobny.github.io\\src\\components\\ProgressBar\\ProgressBar.js":"5","C:\\Users\\Pavel\\Desktop\\paveldrobny.github.io\\src\\components\\Footer\\Footer.js":"6","C:\\Users\\Pavel\\Desktop\\paveldrobny.github.io\\src\\components\\Slider\\Slider.js":"7","C:\\Users\\Pavel\\Desktop\\paveldrobny.github.io\\src\\components\\Slider\\SliderButton.js":"8","C:\\Users\\Pavel\\Desktop\\paveldrobny.github.io\\src\\components\\Slider\\SliderPhoto.js":"9","C:\\Users\\Pavel\\Desktop\\paveldrobny.github.io\\src\\components\\Cards\\CardsView.js":"10","C:\\Users\\Pavel\\Desktop\\paveldrobny.github.io\\src\\components\\Cards\\Card.js":"11","C:\\Users\\Pavel\\Desktop\\paveldrobny.github.io\\src\\components\\HelpMessages\\ThemeMessage\\ThemeMessage.js":"12"},{"size":494,"mtime":1612052483330,"results":"13","hashOfConfig":"14"},{"size":375,"mtime":1612052483331,"results":"15","hashOfConfig":"14"},{"size":404,"mtime":1612472344364,"results":"16","hashOfConfig":"14"},{"size":2437,"mtime":1612736183427,"results":"17","hashOfConfig":"14"},{"size":256,"mtime":1612052483325,"results":"18","hashOfConfig":"14"},{"size":1135,"mtime":1612738329703,"results":"19","hashOfConfig":"14"},{"size":1837,"mtime":1612736450954,"results":"20","hashOfConfig":"14"},{"size":218,"mtime":1612052483328,"results":"21","hashOfConfig":"14"},{"size":709,"mtime":1612052483329,"results":"22","hashOfConfig":"14"},{"size":1615,"mtime":1612054121349,"results":"23","hashOfConfig":"14"},{"size":1161,"mtime":1612054013894,"results":"24","hashOfConfig":"14"},{"size":438,"mtime":1612052483323,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"z0zi77",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"28"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"28"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"28"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},"C:\\Users\\Pavel\\Desktop\\paveldrobny.github.io\\src\\index.js",[],["56","57"],"C:\\Users\\Pavel\\Desktop\\paveldrobny.github.io\\src\\reportWebVitals.js",[],"C:\\Users\\Pavel\\Desktop\\paveldrobny.github.io\\src\\App.js",[],"C:\\Users\\Pavel\\Desktop\\paveldrobny.github.io\\src\\components\\Header\\Header.js",[],"C:\\Users\\Pavel\\Desktop\\paveldrobny.github.io\\src\\components\\ProgressBar\\ProgressBar.js",[],"C:\\Users\\Pavel\\Desktop\\paveldrobny.github.io\\src\\components\\Footer\\Footer.js",["58"],"import React, { useState, useEffect } from \"react\";\r\nimport \"./Footer.css\";\r\n\r\nfunction Footer() {\r\n  const urlUpdate =\r\n    \"https://api.github.com/repos/paveldrobny/paveldrobny.github.io/branches/gh-pages\";\r\n\r\n  const [update, setUpdate] = useState(\"0000/00/00\");\r\n  const [links, setLinks] = useState([\r\n    { href: \"https://vk.com/pdrobny\", class: \"fab fa-vk\" },\r\n    { href: \"https://github.com/paveldrobny\", class: \"fab fa-github\" },\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    let result = \"\";\r\n    return fetch(urlUpdate)\r\n      .then((res) => res.json())\r\n      .then((out) => {\r\n        result = out.commit.commit.author.date.slice(0, 10);\r\n        setUpdate(result);\r\n      })\r\n      .catch((err) => {\r\n        return err;\r\n      });\r\n  });\r\n\r\n  return (\r\n    <footer>\r\n        <div id=\"updateSite\">Update: {update}</div>\r\n        <div id=\"footer_Cont\">\r\n          {links.map((link, index) => {\r\n            return (\r\n              <a key={index} href={link.href}>\r\n                  <i className={link.class}></i>\r\n              </a>\r\n            );\r\n          })}\r\n        </div>\r\n    </footer>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","C:\\Users\\Pavel\\Desktop\\paveldrobny.github.io\\src\\components\\Slider\\Slider.js",["59","60"],"import React, { useState } from \"react\";\r\nimport SliderButton from \"./SliderButton\";\r\nimport SliderPhoto from \"./SliderPhoto\";\r\nimport \"./Slider.css\";\r\n\r\nfunction Slider() {\r\n  const [current, setCurrent] = useState(0);\r\n  const [navButtons, setNavButtons] = useState([\r\n    {\r\n      idT: \"silder-btn-left\",\r\n      class: \"fas fa-chevron-left\",\r\n      isLeft: true,\r\n    },\r\n    {\r\n      idT: \"silder-btn-right\",\r\n      class: \"fas fa-chevron-right\",\r\n      isLeft: false,\r\n    },\r\n  ]);\r\n  const [sliders, setSliders] = useState([\r\n    {\r\n      img: \"Cards/cards_UE4_SideGame.jpg\",\r\n      newProject: false,\r\n      updateProject: false,\r\n    },\r\n    {\r\n      img: \"Slides/slide_1.jpg\",\r\n      newProject: false,\r\n      updateProject: false,\r\n    },\r\n  ]);\r\n\r\n  function changeSlide(isBack) {\r\n    if (isBack) {\r\n      setCurrent(current === 0 ? sliders.length - 1 : current - 1);\r\n    } else {\r\n      setCurrent(current === sliders.length - 1 ? 0 : current + 1);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"slider-content\">\r\n      <div className=\"slider\">\r\n        <div className={\"slider-btn\"}>\r\n          {navButtons.map((navBtn, index) => {\r\n            return (\r\n              <SliderButton\r\n                key={index}\r\n                id={navBtn.idT}\r\n                onClick={() => changeSlide(navBtn.isLeft)}\r\n                icon={navBtn.class}\r\n              ></SliderButton>\r\n            );\r\n          })}\r\n        </div>\r\n        <div id=\"slider-imageCont\">\r\n          {sliders.map((slider, index) => {\r\n            return (\r\n              <SliderPhoto\r\n                key={index}\r\n                index={index}\r\n                slider={slider}\r\n                current={current}\r\n              ></SliderPhoto>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Slider;\r\n","C:\\Users\\Pavel\\Desktop\\paveldrobny.github.io\\src\\components\\Slider\\SliderButton.js",[],"C:\\Users\\Pavel\\Desktop\\paveldrobny.github.io\\src\\components\\Slider\\SliderPhoto.js",[],"C:\\Users\\Pavel\\Desktop\\paveldrobny.github.io\\src\\components\\Cards\\CardsView.js",["61","62"],"import React, { useState, useEffect } from \"react\";\r\nimport Card from \"./Card\";\r\nimport \"./Card.css\";\r\n\r\nfunction CardsView() {\r\n  const [cards, setCards] = useState([\r\n    {\r\n      name: \"Ping-Pong with AI (Beta)\",\r\n      img: \"Cards/cards_PingPong.jpg\",\r\n      urlDemo: \"https://paveldrobny.github.io/JS-Game_PingPong/\",\r\n      urlCode: \"https://github.com/paveldrobny/JS-Game_PingPong\",\r\n      isDemo: true,\r\n      repoName: \"JS-Game_PingPong\",\r\n      using: \"Canvas, DOM\",\r\n      update: \"Сan't get data!\",\r\n      language: \"JavaScript\",\r\n    },\r\n    {\r\n      name: \"Side game template\",\r\n      img: \"Cards/cards_UE4_SideGame.jpg\",\r\n      urlDemo: \"\",\r\n      urlCode: \"https://github.com/paveldrobny/UE4_SideGame\",\r\n      isDemo: false,\r\n      repoName: \"UE4_SideGame\",\r\n      using: \"Unreal Engine 4.25\",\r\n      update: \"Сan't get data!\",\r\n      language: \"C++\",\r\n    },\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    cards.map((o, index) => {\r\n      update(o.repoName, index);\r\n    });\r\n  }, []);\r\n\r\n  function update(repo, index) {\r\n    let result = \"\";\r\n    let urlUpdate = `https://api.github.com/repos/paveldrobny/${repo}`;\r\n    fetch(urlUpdate)\r\n      .then((res) => res.json())\r\n      .then((out) => {\r\n        result = out.updated_at.slice(0, 10);\r\n        let newCards = [...cards];\r\n        newCards[index].update = result;\r\n        setCards(newCards);\r\n      });\r\n  }\r\n\r\n  return (\r\n    <div className=\"projects\">\r\n      <section>\r\n        {cards.map((card, index) => {\r\n          return <Card card={card} key={index}></Card>;\r\n        })}\r\n      </section>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CardsView;\r\n","C:\\Users\\Pavel\\Desktop\\paveldrobny.github.io\\src\\components\\Cards\\Card.js",["63","64"],"import React from \"react\";\r\n\r\nfunction Card({ card }) {\r\n  return (\r\n    <div className=\"card\">\r\n      <div className=\"card_img_Cont\">\r\n        <div\r\n          className=\"card-img\"\r\n          style={{\r\n            backgroundImage: `url(${\r\n              require(\"../../assets/\" + card.img).default\r\n            })`,\r\n          }}\r\n        ></div>\r\n      </div>\r\n      <div className=\"card_view_content\">\r\n        <div className=\"card_title\">{card.name}</div>\r\n        <div className=\"card_info\">\r\n          <b>Using: {card.using} </b>\r\n        </div>\r\n        <div className=\"card_info\">\r\n          <b>Language: {card.language}</b>\r\n        </div>\r\n        <div className=\"card_info\">\r\n          <b>Update: {card.update}</b>\r\n        </div>\r\n        <div className=\"card_view\">\r\n          <a\r\n            target=\"_blank\"\r\n            className={`btn_Demo ${card.isDemo ? \"activeDemo\" : \"\"}`}\r\n            href={card.urlDemo}\r\n          >\r\n            DEMO\r\n          </a>\r\n          <a target=\"_blank\" className=\"btn_Code\" href={card.urlCode}>\r\n            SOURCE CODE\r\n          </a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Card;\r\n","C:\\Users\\Pavel\\Desktop\\paveldrobny.github.io\\src\\components\\HelpMessages\\ThemeMessage\\ThemeMessage.js",[],["65","66"],{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","severity":1,"message":"72","line":9,"column":17,"nodeType":"73","messageId":"74","endLine":9,"endColumn":25},{"ruleId":"71","severity":1,"message":"75","line":8,"column":22,"nodeType":"73","messageId":"74","endLine":8,"endColumn":35},{"ruleId":"71","severity":1,"message":"76","line":20,"column":19,"nodeType":"73","messageId":"74","endLine":20,"endColumn":29},{"ruleId":"77","severity":1,"message":"78","line":32,"column":26,"nodeType":"79","messageId":"80","endLine":32,"endColumn":28},{"ruleId":"81","severity":1,"message":"82","line":35,"column":6,"nodeType":"83","endLine":35,"endColumn":8,"suggestions":"84"},{"ruleId":"85","severity":1,"message":"86","line":28,"column":11,"nodeType":"87","endLine":32,"endColumn":12},{"ruleId":"85","severity":1,"message":"86","line":35,"column":11,"nodeType":"87","endLine":35,"endColumn":71},{"ruleId":"67","replacedBy":"88"},{"ruleId":"69","replacedBy":"89"},"no-native-reassign",["90"],"no-negated-in-lhs",["91"],"no-unused-vars","'setLinks' is assigned a value but never used.","Identifier","unusedVar","'setNavButtons' is assigned a value but never used.","'setSliders' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'cards' and 'update'. Either include them or remove the dependency array.","ArrayExpression",["92"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement",["90"],["91"],"no-global-assign","no-unsafe-negation",{"desc":"93","fix":"94"},"Update the dependencies array to be: [cards, update]",{"range":"95","text":"96"},[986,988],"[cards, update]"]