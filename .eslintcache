[{"C:\\Users\\Pavel\\Documents\\GitHub\\paveldrobny.github.io\\src\\index.js":"1","C:\\Users\\Pavel\\Documents\\GitHub\\paveldrobny.github.io\\src\\App.js":"2","C:\\Users\\Pavel\\Documents\\GitHub\\paveldrobny.github.io\\src\\reportWebVitals.js":"3","C:\\Users\\Pavel\\Documents\\GitHub\\paveldrobny.github.io\\src\\components\\Header\\index.js":"4","C:\\Users\\Pavel\\Documents\\GitHub\\paveldrobny.github.io\\src\\components\\Slider\\index.js":"5","C:\\Users\\Pavel\\Documents\\GitHub\\paveldrobny.github.io\\src\\components\\Cards\\index.js":"6","C:\\Users\\Pavel\\Documents\\GitHub\\paveldrobny.github.io\\src\\components\\Footer\\index.js":"7","C:\\Users\\Pavel\\Documents\\GitHub\\paveldrobny.github.io\\src\\components\\Slider\\Slider.js":"8","C:\\Users\\Pavel\\Documents\\GitHub\\paveldrobny.github.io\\src\\components\\Header\\Header.js":"9","C:\\Users\\Pavel\\Documents\\GitHub\\paveldrobny.github.io\\src\\components\\Cards\\Cards.js":"10","C:\\Users\\Pavel\\Documents\\GitHub\\paveldrobny.github.io\\src\\components\\Footer\\Footer.js":"11","C:\\Users\\Pavel\\Documents\\GitHub\\paveldrobny.github.io\\src\\components\\Slider\\SliderPhoto.js":"12","C:\\Users\\Pavel\\Documents\\GitHub\\paveldrobny.github.io\\src\\components\\Slider\\SliderButton.js":"13","C:\\Users\\Pavel\\Documents\\GitHub\\paveldrobny.github.io\\src\\components\\Slider\\SliderDots.js":"14","C:\\Users\\Pavel\\Documents\\GitHub\\paveldrobny.github.io\\src\\components\\Cards\\Card.js":"15","C:\\Users\\Pavel\\Documents\\GitHub\\paveldrobny.github.io\\src\\components\\ProgressBar\\index.js":"16","C:\\Users\\Pavel\\Documents\\GitHub\\paveldrobny.github.io\\src\\components\\HelpMessages\\Theme\\index.js":"17","C:\\Users\\Pavel\\Documents\\GitHub\\paveldrobny.github.io\\src\\components\\ProgressBar\\ProgressBar.js":"18","C:\\Users\\Pavel\\Documents\\GitHub\\paveldrobny.github.io\\src\\components\\HelpMessages\\Theme\\Theme.js":"19","C:\\Users\\Pavel\\Documents\\GitHub\\paveldrobny.github.io\\src\\components\\Loadings\\Slider\\index.js":"20","C:\\Users\\Pavel\\Documents\\GitHub\\paveldrobny.github.io\\src\\components\\Loadings\\Slider\\LoadingSlider.js":"21","C:\\Users\\Pavel\\Documents\\GitHub\\paveldrobny.github.io\\src\\components\\Loadings\\Card\\index.js":"22","C:\\Users\\Pavel\\Documents\\GitHub\\paveldrobny.github.io\\src\\components\\Loadings\\Card\\LoadingCard.js":"23","C:\\Users\\Pavel\\Documents\\GitHub\\paveldrobny.github.io\\src\\components\\Cards\\Title.js":"24","C:\\Users\\Pavel\\Documents\\GitHub\\paveldrobny.github.io\\src\\components\\Cards\\Info.js":"25","C:\\Users\\Pavel\\Documents\\GitHub\\paveldrobny.github.io\\src\\components\\Cards\\Link.js":"26"},{"size":927,"mtime":1628612384847,"results":"27","hashOfConfig":"28"},{"size":369,"mtime":1628612384822,"results":"29","hashOfConfig":"28"},{"size":375,"mtime":1628612384848,"results":"30","hashOfConfig":"28"},{"size":54,"mtime":1628612384832,"results":"31","hashOfConfig":"28"},{"size":54,"mtime":1628612384846,"results":"32","hashOfConfig":"28"},{"size":50,"mtime":1628612384827,"results":"33","hashOfConfig":"28"},{"size":54,"mtime":1628612384830,"results":"34","hashOfConfig":"28"},{"size":2882,"mtime":1628615462544,"results":"35","hashOfConfig":"28"},{"size":2775,"mtime":1628615606922,"results":"36","hashOfConfig":"28"},{"size":1436,"mtime":1628612384825,"results":"37","hashOfConfig":"28"},{"size":1192,"mtime":1628612384829,"results":"38","hashOfConfig":"28"},{"size":837,"mtime":1628615716971,"results":"39","hashOfConfig":"28"},{"size":470,"mtime":1628612384844,"results":"40","hashOfConfig":"28"},{"size":485,"mtime":1628612384845,"results":"41","hashOfConfig":"28"},{"size":1204,"mtime":1628612384824,"results":"42","hashOfConfig":"28"},{"size":67,"mtime":1628612384841,"results":"43","hashOfConfig":"28"},{"size":50,"mtime":1628612384834,"results":"44","hashOfConfig":"28"},{"size":324,"mtime":1628612384841,"results":"45","hashOfConfig":"28"},{"size":369,"mtime":1628612384834,"results":"46","hashOfConfig":"28"},{"size":75,"mtime":1628612384839,"results":"47","hashOfConfig":"28"},{"size":392,"mtime":1628612384839,"results":"48","hashOfConfig":"28"},{"size":69,"mtime":1628612384837,"results":"49","hashOfConfig":"28"},{"size":240,"mtime":1628612384837,"results":"50","hashOfConfig":"28"},{"size":180,"mtime":1628612384827,"results":"51","hashOfConfig":"28"},{"size":356,"mtime":1628612384825,"results":"52","hashOfConfig":"28"},{"size":272,"mtime":1628609241651,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"1rnimgv",{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"56"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"56"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"56"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"56"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"56"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"C:\\Users\\Pavel\\Documents\\GitHub\\paveldrobny.github.io\\src\\index.js",[],["112","113"],"C:\\Users\\Pavel\\Documents\\GitHub\\paveldrobny.github.io\\src\\App.js",[],"C:\\Users\\Pavel\\Documents\\GitHub\\paveldrobny.github.io\\src\\reportWebVitals.js",[],"C:\\Users\\Pavel\\Documents\\GitHub\\paveldrobny.github.io\\src\\components\\Header\\index.js",[],"C:\\Users\\Pavel\\Documents\\GitHub\\paveldrobny.github.io\\src\\components\\Slider\\index.js",[],"C:\\Users\\Pavel\\Documents\\GitHub\\paveldrobny.github.io\\src\\components\\Cards\\index.js",[],"C:\\Users\\Pavel\\Documents\\GitHub\\paveldrobny.github.io\\src\\components\\Footer\\index.js",[],"C:\\Users\\Pavel\\Documents\\GitHub\\paveldrobny.github.io\\src\\components\\Slider\\Slider.js",["114","115"],"import React, { useState, useEffect } from \"react\";\r\nimport \"./Slider.css\";\r\nimport firebase from \"firebase\";\r\nimport SliderButton from \"./SliderButton\";\r\nimport SliderPhoto from \"./SliderPhoto\";\r\nimport LoadingSlider from \"../Loadings/Slider\";\r\nimport SliderDots from \"./SliderDots\";\r\nimport ProgressBar from \"../ProgressBar\";\r\n\r\nconst Slider = () => {\r\n  const [current, setCurrent] = useState(0);\r\n  const [navButtons, setNavButtons] = useState([\r\n    {\r\n      id: \"silder-btn-left\",\r\n      class: \"fas fa-chevron-left\",\r\n      isLeft: true,\r\n    },\r\n    {\r\n      id: \"silder-btn-right\",\r\n      class: \"fas fa-chevron-right\",\r\n      isLeft: false,\r\n    },\r\n  ]);\r\n  const [sliders, setSliders] = useState([]);\r\n  const [isSliderMove, setSliderMove] = useState(true);\r\n  const [progress, setProgress] = useState(1);\r\n  const [isLoading, setLoading] = useState(true);\r\n  const db = firebase.firestore();\r\n  const time = 5000;\r\n  const numberToShow = 3;\r\n\r\n  useEffect(() => {\r\n    const slidersData = [];\r\n\r\n    db.collection(\"Projects\")\r\n      .orderBy(\"update\", \"desc\")\r\n      .get()\r\n      .then((querySnapshot) => {\r\n        querySnapshot.forEach((doc) => {\r\n          slidersData.push(doc.data());\r\n        });\r\n        setSliders(slidersData.slice(0, numberToShow));\r\n        setLoading(false);\r\n      });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const forward = (current + 1) % sliders.length;\r\n    const id = setTimeout(() => setCurrent(forward), time);\r\n    setProgress(0);\r\n    return () => clearTimeout(id);\r\n  }, [current, sliders.length]);\r\n\r\n  useEffect(() => {\r\n    const id = setTimeout(\r\n      () => setProgress(progress + 1),\r\n      time / 100 - time / 1000\r\n    );\r\n    return () => clearTimeout(id);\r\n  }, [progress]);\r\n\r\n  const sliderTimer = () => {\r\n    setTimeout(() => setSliderMove(true), 500);\r\n  };\r\n\r\n  const changeSlide = (isBack) => {\r\n    if (isSliderMove) {\r\n      setSliderMove(false);\r\n      sliderTimer();\r\n      if (isBack) {\r\n        setCurrent(current === 0 ? sliders.length - 1 : current - 1);\r\n      } else {\r\n        setCurrent(current === sliders.length - 1 ? 0 : current + 1);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"slider-content\">\r\n      <div className=\"slider\">\r\n        {isLoading ? (\r\n          <LoadingSlider />\r\n        ) : (\r\n          <div>\r\n            <div id=\"slider-title\">Lates updates</div>\r\n            <div id=\"progress-wrapper\">\r\n              <ProgressBar value={progress} styleType={\"_slider\"} />\r\n            </div>\r\n            <SliderPhoto sliders={sliders} current={current} />\r\n            <SliderButton navButtons={navButtons} changeSlide={changeSlide} />\r\n            <SliderDots\r\n              sliders={sliders}\r\n              current={current}\r\n              setCurrent={setCurrent}\r\n            />\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Slider;\r\n","C:\\Users\\Pavel\\Documents\\GitHub\\paveldrobny.github.io\\src\\components\\Header\\Header.js",["116"],"import React, { useState, useEffect } from \"react\";\r\nimport \"./Header.css\";\r\nimport ThemeMessage from \"../HelpMessages/Theme\";\r\nimport ProgressBar from \"../ProgressBar\";\r\n\r\nconst Header = () => {\r\n  const [percentage, setPercentage] = useState(0);\r\n  const [active, setActive] = useState(false);\r\n  const [isDarkTheme, setDarkTheme] = useState(\r\n    localStorage.getItem(\"isDarkTheme\") ? true : false\r\n  );\r\n  // const [isMessageTheme, setMessageTheme] = useState(\r\n  //   localStorage.getItem(\"isMessageTheme\") ? false : true\r\n  // );\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"scroll\", handleScroll);\r\n    return () => {\r\n      window.removeEventListener(\"scroll\", handleScroll);\r\n    };\r\n  }, [active]);\r\n\r\n  useEffect(() => {\r\n    getValue();\r\n  });\r\n\r\n  const handleScroll = () => {\r\n    let scrollStart =\r\n        document.body.scrollTop || document.documentElement.scrollTop,\r\n      scrollHeight =\r\n        document.body.scrollHeight - document.documentElement.clientHeight;\r\n\r\n    let percentValue = (scrollStart / scrollHeight) * 100;\r\n    setPercentage(percentValue);\r\n\r\n    window.scrollY >= 15 ? setActive(true) : setActive(false);\r\n  };\r\n\r\n  const changeTheme = () => {\r\n    store();\r\n    //setMessageTheme(false);\r\n    getValue();\r\n  };\r\n\r\n  const store = () => {\r\n    localStorage.setItem(\"isDarkTheme\", isDarkTheme);\r\n    //localStorage.setItem(\"isMessageTheme\", isMessageTheme);\r\n  };\r\n\r\n  const getValue = () => {\r\n    let bodyClass = document.body.classList,\r\n      htmlClass = document.documentElement.classList;\r\n\r\n    if (!localStorage.isDarkTheme) {\r\n      store();\r\n    }\r\n    if (localStorage.getItem(\"isDarkTheme\") === \"true\") {\r\n      bodyClass.add(\"dark-theme\");\r\n      htmlClass.add(\"dark-theme\");\r\n      setDarkTheme(false);\r\n    } else if (localStorage.getItem(\"isDarkTheme\") === \"false\") {\r\n      bodyClass.remove(\"dark-theme\");\r\n      htmlClass.remove(\"dark-theme\");\r\n      setDarkTheme(true);\r\n    }\r\n    // if (localStorage.getItem(\"isMessageTheme\") === \"false\") {\r\n    //   setMessageTheme(false);\r\n    // }\r\n  };\r\n\r\n  return (\r\n    <header id=\"header\" className={`${active ? \"is-active\" : \"\"}`}>\r\n      <ProgressBar value={percentage} styleType={\"_header\"} />\r\n      <div className=\"header-content\">\r\n        <div className=\"header-title\">Pavel Drobny</div>\r\n        <div className=\"header-nav-btn\">\r\n          <ul>\r\n            <li id=\"theme-btn\" onClick={changeTheme}>\r\n              {isDarkTheme ? (\r\n                <i className=\"fas fa-moon\"></i>\r\n              ) : (\r\n                <i className=\"fas fa-sun\"></i>\r\n              )}\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n      {/* <ThemeMessage isActive={isMessageTheme}></ThemeMessage> */}\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","C:\\Users\\Pavel\\Documents\\GitHub\\paveldrobny.github.io\\src\\components\\Cards\\Cards.js",["117"],"import React, { useState, useEffect } from \"react\";\r\nimport firebase from \"firebase\";\r\nimport Card from \"./Card\";\r\nimport LoadingCard from \"../Loadings/Card\";\r\nimport \"./Card.css\";\r\n\r\nconst Cards = () => {\r\n  const [cards, setCards] = useState([]);\r\n  const [isLoading, setLoading] = useState(true);\r\n  const db = firebase.firestore();\r\n\r\n  useEffect(() => {\r\n    const cardsData = [];\r\n\r\n    db.collection(\"Projects\")\r\n      .orderBy(\"id\", \"desc\")\r\n      .get()\r\n      .then((querySnapshot) => {\r\n        querySnapshot.forEach((doc) => {\r\n          cardsData.push(doc.data());\r\n          updateProjectData(doc.data().repoName, doc.id);\r\n        });\r\n        setCards(cardsData);\r\n        setLoading(false);\r\n      });\r\n  }, []);\r\n\r\n  const updateProjectData = (repo, index) => {\r\n    let result = \"\";\r\n    let urlUpdate = `https://api.github.com/repos/paveldrobny/${repo}`;\r\n    fetch(urlUpdate)\r\n      .then((res) => res.json())\r\n      .then((out) => {\r\n        result = out.updated_at.slice(0, 10);\r\n\r\n        db.collection(\"Projects\").doc(index).update({\r\n          update: result,\r\n        });\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"projects\">\r\n      <section>\r\n        {isLoading ? (\r\n          <LoadingCard />\r\n        ) : (\r\n          cards.map((card, index) => {\r\n            return <Card card={card} key={index}></Card>;\r\n          })\r\n        )}\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Cards;\r\n","C:\\Users\\Pavel\\Documents\\GitHub\\paveldrobny.github.io\\src\\components\\Footer\\Footer.js",["118"],"import React, { useState, useEffect } from \"react\";\r\nimport \"./Footer.css\";\r\n\r\nconst Footer = () => {\r\n  const urlUpdate =\r\n    \"https://api.github.com/repos/paveldrobny/paveldrobny.github.io/branches/gh-pages\";\r\n\r\n  const [update, setUpdate] = useState(\"0000/00/00\");\r\n  const [links, setLinks] = useState([\r\n    { href: \"https://vk.com/pdrobny\", class: \"fab fa-vk\" },\r\n    { href: \"https://github.com/paveldrobny\", class: \"fab fa-github\" },\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    let result = \"\";\r\n    return fetch(urlUpdate)\r\n      .then((res) => res.json())\r\n      .then((out) => {\r\n        result = out.commit.commit.author.date.slice(0, 10);\r\n        setUpdate(result);\r\n      })\r\n      .catch((err) => {\r\n        return err;\r\n      });\r\n  });\r\n\r\n  return (\r\n    <div id=\"footer-wrapper\">\r\n      <footer>\r\n        <div id=\"footer-update-text\">Update: {update}</div>\r\n        <div>\r\n          {links.map((link, index) => {\r\n            return (\r\n              <a key={index} id=\"footer-link\" href={link.href}>\r\n                <i className={link.class}></i>\r\n              </a>\r\n            );\r\n          })}\r\n        </div>\r\n      </footer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","C:\\Users\\Pavel\\Documents\\GitHub\\paveldrobny.github.io\\src\\components\\Slider\\SliderPhoto.js",[],"C:\\Users\\Pavel\\Documents\\GitHub\\paveldrobny.github.io\\src\\components\\Slider\\SliderButton.js",[],"C:\\Users\\Pavel\\Documents\\GitHub\\paveldrobny.github.io\\src\\components\\Slider\\SliderDots.js",[],"C:\\Users\\Pavel\\Documents\\GitHub\\paveldrobny.github.io\\src\\components\\Cards\\Card.js",["119"],"import React, { useState } from \"react\";\r\nimport Info from \"./Info\";\r\nimport Link from \"./Link\";\r\nimport Title from \"./Title\";\r\n\r\nconst Card = ({ card }) => {\r\n  const [cardInfo, setCardInfo] = useState([\r\n    { name: \"Using\", property: card.using },\r\n    { name: \"Language\", property: card.language },\r\n    { name: \"Update\", property: card.update },\r\n  ]);\r\n\r\n  return (\r\n    <div className=\"card\">\r\n      <div className=\"card-img-content\">\r\n        <div\r\n          className=\"card-img\"\r\n          style={{\r\n            backgroundImage: `url(${card.img})`,\r\n          }}\r\n        ></div>\r\n      </div>\r\n      <div className=\"card-view-content\">\r\n        <Title card={card} />\r\n        <Info cardInfo={cardInfo} />\r\n        <div className=\"card-view\">\r\n          <Link\r\n            card={card.urlDemo}\r\n            name=\"DEMO\"\r\n            FA_icon=\"play\"\r\n            className={`card-btn btn-demo ${card.isDemo ? \"is-active\" : \"\"}`}\r\n          />\r\n          \r\n          <Link\r\n            card={card.urlCode}\r\n            name=\"SOURCE CODE\"\r\n            FA_icon=\"code\"\r\n            className=\"card-btn btn-code\"\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","C:\\Users\\Pavel\\Documents\\GitHub\\paveldrobny.github.io\\src\\components\\ProgressBar\\index.js",[],"C:\\Users\\Pavel\\Documents\\GitHub\\paveldrobny.github.io\\src\\components\\HelpMessages\\Theme\\index.js",[],"C:\\Users\\Pavel\\Documents\\GitHub\\paveldrobny.github.io\\src\\components\\ProgressBar\\ProgressBar.js",[],"C:\\Users\\Pavel\\Documents\\GitHub\\paveldrobny.github.io\\src\\components\\HelpMessages\\Theme\\Theme.js",[],"C:\\Users\\Pavel\\Documents\\GitHub\\paveldrobny.github.io\\src\\components\\Loadings\\Slider\\index.js",[],"C:\\Users\\Pavel\\Documents\\GitHub\\paveldrobny.github.io\\src\\components\\Loadings\\Slider\\LoadingSlider.js",[],"C:\\Users\\Pavel\\Documents\\GitHub\\paveldrobny.github.io\\src\\components\\Loadings\\Card\\index.js",[],"C:\\Users\\Pavel\\Documents\\GitHub\\paveldrobny.github.io\\src\\components\\Loadings\\Card\\LoadingCard.js",[],"C:\\Users\\Pavel\\Documents\\GitHub\\paveldrobny.github.io\\src\\components\\Cards\\Title.js",[],"C:\\Users\\Pavel\\Documents\\GitHub\\paveldrobny.github.io\\src\\components\\Cards\\Info.js",[],"C:\\Users\\Pavel\\Documents\\GitHub\\paveldrobny.github.io\\src\\components\\Cards\\Link.js",[],{"ruleId":"120","replacedBy":"121"},{"ruleId":"122","replacedBy":"123"},{"ruleId":"124","severity":1,"message":"125","line":12,"column":22,"nodeType":"126","messageId":"127","endLine":12,"endColumn":35},{"ruleId":"128","severity":1,"message":"129","line":45,"column":6,"nodeType":"130","endLine":45,"endColumn":8,"suggestions":"131"},{"ruleId":"124","severity":1,"message":"132","line":3,"column":8,"nodeType":"126","messageId":"127","endLine":3,"endColumn":20},{"ruleId":"128","severity":1,"message":"133","line":26,"column":6,"nodeType":"130","endLine":26,"endColumn":8,"suggestions":"134"},{"ruleId":"124","severity":1,"message":"135","line":9,"column":17,"nodeType":"126","messageId":"127","endLine":9,"endColumn":25},{"ruleId":"124","severity":1,"message":"136","line":7,"column":20,"nodeType":"126","messageId":"127","endLine":7,"endColumn":31},"no-native-reassign",["137"],"no-negated-in-lhs",["138"],"no-unused-vars","'setNavButtons' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'db'. Either include it or remove the dependency array.","ArrayExpression",["139"],"'ThemeMessage' is defined but never used.","React Hook useEffect has missing dependencies: 'db' and 'updateProjectData'. Either include them or remove the dependency array.",["140"],"'setLinks' is assigned a value but never used.","'setCardInfo' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"141","fix":"142"},{"desc":"143","fix":"144"},"Update the dependencies array to be: [db]",{"range":"145","text":"146"},"Update the dependencies array to be: [db, updateProjectData]",{"range":"147","text":"148"},[1319,1321],"[db]",[725,727],"[db, updateProjectData]"]