{"version":3,"sources":["components/HelpMessages/Theme/index.js","components/HelpMessages/Theme/Theme.js","components/ProgressBar/index.js","components/ProgressBar/ProgressBar.js","components/Header/index.js","components/Header/Header.js","components/Slider/SliderButton.js","components/Slider/SliderPhoto.js","components/Loading/index.js","components/Loading/Loading.js","components/Slider/SliderDots.js","components/Slider/index.js","components/Slider/Slider.js","components/Cards/Card.js","components/Cards/index.js","components/Cards/Cards.js","components/Footer/index.js","components/Footer/Footer.js","App.js","reportWebVitals.js","index.js"],"names":["Theme","isActive","id","className","ProgressBar","value","styleType","style","width","Header","useState","percentage","setPercentage","localStorage","getItem","isDarkTheme","setDarkTheme","isMessageTheme","setMessageTheme","headerActive","useEffect","window","addEventListener","handleScroll","getValue","scrollY","scrollStart","document","body","scrollTop","documentElement","scrollHeight","clientHeight","store","setItem","bodyClass","classList","htmlClass","add","remove","onClick","SliderButton","icon","SliderPhoto","slider","index","currentT","backgroundImage","img","right","name","using","Loading","SliderDots","Slider","current","setCurrent","idT","class","isLeft","navButtons","sliders","setSliders","isSliderMove","setSliderMove","progress","setProgress","isLoading","setLoading","db","firebase","firestore","time","slidersData","collection","orderBy","get","then","querySnapshot","size","forEach","doc","data","push","forward","length","setTimeout","clearTimeout","changeSlide","isBack","map","navBtn","Card","card","language","update","target","isDemo","href","urlDemo","urlCode","Cards","cards","setCards","cardsData","updateProjectData","repoName","repo","result","urlUpdate","fetch","res","json","out","updated_at","slice","Footer","setUpdate","links","commit","author","date","catch","err","link","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.d8e53124.chunk.js","sourcesContent":["import Theme from \"./Theme\"\nexport default Theme;","import React from \"react\";\nimport \"./Theme.css\";\n\nconst Theme = ({ isActive }) => {\n  return (\n    <div id=\"themeMessage\" className={isActive ? \"active\" : \"\"}>\n      <div id=\"msgTextMain\">DARK THEME</div>\n      <div id=\"msgText\">\n        Click on the <i className=\"fas fa-moon\"></i> to switch.\n      </div>\n    </div>\n  );\n};\n\nexport default Theme;\n","import ProgressBar from \"./ProgressBar\"\nexport default ProgressBar","import React from \"react\";\nimport \"./ProgressBar.css\";\n\nconst ProgressBar = ({ value, styleType }) => {\n  return (\n    <div id=\"progressCont\">\n      <div\n        id=\"progressValue\"\n        className={styleType}\n        style={{ width: `${value}%` }}\n      ></div>\n    </div>\n  );\n};\n\nexport default ProgressBar;\n","import Header from './Header';\nexport default Header;","import React, { useState, useEffect } from \"react\";\nimport \"./Header.css\";\nimport ThemeMessage from \"../HelpMessages/Theme\";\nimport ProgressBar from \"../ProgressBar\";\n\nconst Header = () => {\n  const [percentage, setPercentage] = useState(0);\n  const [isDarkTheme, setDarkTheme] = useState(\n    localStorage.getItem(\"isDarkTheme\") ? true : false\n  );\n  const [isMessageTheme, setMessageTheme] = useState(\n    localStorage.getItem(\"isMessageTheme\") ? false : true\n  );\n\n  let headerActive = \"\";\n\n  useEffect(() => {\n    window.addEventListener(\"scroll\", handleScroll);\n    getValue();\n  });\n\n  if (window.scrollY >= 15) {\n    headerActive += \"active\";\n  }\n\n  const handleScroll = () => {\n    let scrollStart =\n        document.body.scrollTop || document.documentElement.scrollTop,\n      scrollHeight =\n        document.body.scrollHeight - document.documentElement.clientHeight;\n\n    let percentValue = (scrollStart / scrollHeight) * 100;\n    setPercentage(percentValue);\n  };\n\n  const changeTheme = () => {\n    store();\n    setMessageTheme(false);\n    getValue();\n  };\n\n  const store = () => {\n    localStorage.setItem(\"isDarkTheme\", isDarkTheme);\n    localStorage.setItem(\"isMessageTheme\", isMessageTheme);\n  };\n\n  const getValue = () => {\n    let bodyClass = document.body.classList,\n      htmlClass = document.documentElement.classList;\n\n    if (!localStorage.isDarkTheme) {\n      store();\n    }\n    if (localStorage.getItem(\"isDarkTheme\") === \"true\") {\n      bodyClass.add(\"darkTheme\");\n      htmlClass.add(\"darkTheme\");\n      setDarkTheme(false);\n    } else if (localStorage.getItem(\"isDarkTheme\") === \"false\") {\n      bodyClass.remove(\"darkTheme\");\n      htmlClass.remove(\"darkTheme\");\n      setDarkTheme(true);\n    }\n    if (localStorage.getItem(\"isMessageTheme\") === \"false\") {\n      setMessageTheme(false);\n    }\n  };\n\n  return (\n    <div id=\"header\" className={headerActive}>\n      <ProgressBar value={percentage} styleType={\"headerV\"} />\n      <div className=\"header-cont\">\n        <div className=\"header-title\">Pavel Drobny</div>\n        <div className=\"header-navBtn\">\n          <ul>\n            <li id=\"themeBtn\" onClick={changeTheme}>\n              <i className=\"fas fa-moon\"></i>\n            </li>\n          </ul>\n        </div>\n      </div>\n      <ThemeMessage isActive={isMessageTheme}></ThemeMessage>\n    </div>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\n\nconst SliderButton = ({ id, icon, onClick }) => {\n  return (\n    <button onClick={onClick} id={id}>\n      <i className={icon}></i>\n    </button>\n  );\n};\n\nexport default SliderButton;\n","import React from \"react\";\n\nconst SliderPhoto = ({ slider, index, currentT }) => {\n  return (\n    <div\n      className={index === currentT ? \"slider-image active\" : \"slider-image\"}\n      style={{\n        backgroundImage: `url(${slider.img})`,\n        right: `${currentT * 100}%`,\n      }}\n    >\n      <div className=\"projectInfo\">\n        <div className=\"projectName\">\n          <i>\n            <b>{slider.name}</b>\n          </i>\n          {slider.using}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SliderPhoto;\n","import Loading from \"./Loading\"\nexport default Loading;","import React from \"react\";\nimport \"./Loading.css\";\n\nconst Loading = () => {\n  return (\n    <div className=\"lds-ellipsis\">\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n    </div>\n  );\n};\n\nexport default Loading;\n","import React from \"react\";\n\nconst SliderDots = ({ index, currentT, onClick }) => {\n  return (\n    <div\n      className={index === currentT ? \"slider-dots active\" : \"slider-dots\"}\n      onClick={onClick}\n    ></div>\n  );\n};\n\nexport default SliderDots;\n","import Slider from './Slider';\nexport default Slider;","import React, { useState, useEffect } from \"react\";\nimport \"./Slider.css\";\nimport firebase from \"firebase\";\nimport SliderButton from \"./SliderButton\";\nimport SliderPhoto from \"./SliderPhoto\";\nimport Loading from \"../Loading\";\nimport SliderDots from \"./SliderDots\";\nimport ProgressBar from \"../ProgressBar\";\n\nconst Slider = () => {\n  const [current, setCurrent] = useState(0);\n  const [navButtons, setNavButtons] = useState([\n    {\n      idT: \"silder-btn-left\",\n      class: \"fas fa-chevron-left\",\n      isLeft: true,\n    },\n    {\n      idT: \"silder-btn-right\",\n      class: \"fas fa-chevron-right\",\n      isLeft: false,\n    },\n  ]);\n  const [sliders, setSliders] = useState([]);\n  const [isSliderMove, setSliderMove] = useState(true);\n  const [progress, setProgress] = useState(1);\n  const [isLoading, setLoading] = useState(true);\n  const db = firebase.firestore();\n  const time = 5000;\n\n  useEffect(() => {\n    const slidersData = [];\n\n    db.collection(\"Projects\")\n      .orderBy(\"id\", \"desc\")\n      .get()\n      .then((querySnapshot) => {\n        let size = querySnapshot.size;\n        querySnapshot.forEach((doc) => {\n          let id = doc.data().id;\n          if (id >= size - 1 && id <= size) {\n            slidersData.push(doc.data());\n          }\n        });\n        setSliders(slidersData);\n        setLoading(false);\n      });\n  }, []);\n\n  useEffect(() => {\n    const forward = (current + 1) % sliders.length;\n    const id = setTimeout(() => setCurrent(forward), time);\n    setProgress(0);\n    return () => clearTimeout(id);\n  }, [current, sliders.length]);\n\n  useEffect(() => {\n    const id = setTimeout(\n      () => setProgress(progress + 1),\n      time / 100 - time / 1000\n    );\n    return () => clearTimeout(id);\n  }, [progress]);\n\n  const sliderTimer = () => {\n    setTimeout(() => setSliderMove(true), 500);\n  };\n\n  const changeSlide = (isBack) => {\n    if (isSliderMove) {\n      setSliderMove(false);\n      sliderTimer();\n      if (isBack) {\n        setCurrent(current === 0 ? sliders.length - 1 : current - 1);\n      } else {\n        setCurrent(current === sliders.length - 1 ? 0 : current + 1);\n      }\n    }\n  };\n\n  return (\n    <div className=\"slider-content\">\n      <div className=\"slider\">\n        {isLoading ? (\n          <Loading />\n        ) : (\n          <div>\n            <div className={\"slider-btn\"}>\n              {navButtons.map((navBtn, index) => {\n                return (\n                  <SliderButton\n                    key={index}\n                    id={navBtn.idT}\n                    onClick={() => changeSlide(navBtn.isLeft)}\n                    icon={navBtn.class}\n                  ></SliderButton>\n                );\n              })}\n            </div>\n            <div id=\"slider-title\">Lates updates</div>\n            <div id=\"progressWrapper\">\n              <ProgressBar value={progress} styleType={\"sliderV\"} />\n            </div>\n            <div id=\"slider-imageCont\">\n              {sliders.map((slider, index) => {\n                return (\n                  <SliderPhoto\n                    key={index}\n                    index={index}\n                    slider={slider}\n                    currentT={current}\n                  ></SliderPhoto>\n                );\n              })}\n            </div>\n            <div id=\"slider-dotsCont\">\n              {sliders.map((slider, index) => {\n                return (\n                  <SliderDots\n                    key={index}\n                    index={index}\n                    currentT={current}\n                    onClick={() => setCurrent(index)}\n                  ></SliderDots>\n                );\n              })}\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Slider;\n","import React from \"react\";\n\nconst Card = ({ card }) => {\n  return (\n    <div className=\"card\">\n      <div className=\"card_img_Cont\">\n        <div\n          className=\"card-img\"\n          style={{\n            backgroundImage: `url(${card.img})`,\n          }}\n        ></div>\n      </div>\n      <div className=\"card_view_content\">\n        <div className=\"card_title\">\n          <i>{card.name}</i>\n        </div>\n        <div className=\"card_info\">\n          <b>Using: {card.using} </b>\n        </div>\n        <div className=\"card_info\">\n          <b>Language: {card.language}</b>\n        </div>\n        <div className=\"card_info\">\n          <b>Update: {card.update}</b>\n        </div>\n        <div className=\"card_view\">\n          <a\n            target=\"_blank\"\n            className={`btn_Demo ${card.isDemo ? \"activeDemo\" : \"\"}`}\n            href={card.urlDemo}\n          >\n            DEMO\n          </a>\n          <a target=\"_blank\" className=\"btn_Code\" href={card.urlCode}>\n            SOURCE CODE\n          </a>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Card;\n","import Cards from \"./Cards\"\nexport default Cards;","import React, { useState, useEffect } from \"react\";\nimport firebase from \"firebase\";\nimport Card from \"./Card\";\nimport \"./Card.css\";\n\nconst Cards = () => {\n  const [cards, setCards] = useState([]);\n  const [isLoading, setLoading] = useState(true);\n  const db = firebase.firestore();\n\n  useEffect(() => {\n    const cardsData = [];\n\n    db.collection(\"Projects\")\n      .orderBy(\"id\", \"desc\")\n      .get()\n      .then((querySnapshot) => {\n        querySnapshot.forEach((doc) => {\n          cardsData.push(doc.data());\n          updateProjectData(doc.data().repoName, doc.id);\n        });\n        setCards(cardsData);\n        setLoading(false);\n      });\n  }, []);\n\n  const updateProjectData = (repo, index) => {\n    let result = \"\";\n    let urlUpdate = `https://api.github.com/repos/paveldrobny/${repo}`;\n    fetch(urlUpdate)\n      .then((res) => res.json())\n      .then((out) => {\n        result = out.updated_at.slice(0, 10);\n\n        db.collection(\"Projects\").doc(index).update({\n          update: result,\n        });\n      });\n  };\n\n  return (\n    <div className=\"projects\">\n      <section>\n        {isLoading ? (\n          <div id=\"cardsLoading\">Loading projects...</div>\n        ) : (\n          cards.map((card, index) => {\n            return <Card card={card} key={index}></Card>;\n          })\n        )}\n      </section>\n    </div>\n  );\n};\n\nexport default Cards;\n","import Footer from \"./Footer\";\nexport default Footer;","import React, { useState, useEffect } from \"react\";\nimport \"./Footer.css\";\n\nconst Footer = () => {\n  const urlUpdate =\n    \"https://api.github.com/repos/paveldrobny/paveldrobny.github.io/branches/gh-pages\";\n\n  const [update, setUpdate] = useState(\"0000/00/00\");\n  const [links, setLinks] = useState([\n    { href: \"https://vk.com/pdrobny\", class: \"fab fa-vk\" },\n    { href: \"https://github.com/paveldrobny\", class: \"fab fa-github\" },\n  ]);\n\n  useEffect(() => {\n    let result = \"\";\n    return fetch(urlUpdate)\n      .then((res) => res.json())\n      .then((out) => {\n        result = out.commit.commit.author.date.slice(0, 10);\n        setUpdate(result);\n      })\n      .catch((err) => {\n        return err;\n      });\n  });\n\n  return (\n    <footer>\n      <div id=\"updateSite\">Update: {update}</div>\n      <div id=\"footer_Cont\">\n        {links.map((link, index) => {\n          return (\n            <a key={index} href={link.href}>\n              <i className={link.class}></i>\n            </a>\n          );\n        })}\n      </div>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import \"./App.css\";\nimport Header from \"./components/Header\";\nimport Slider from \"./components/Slider\";\nimport Cards from \"./components/Cards\";\nimport Footer from \"./components/Footer\";\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <Header />\n      <Slider />\n      <Cards />\n      <Footer />\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport \"firebase/firestore\";\r\nimport firebase from \"firebase\";\r\n\r\nvar config = {\r\n  apiKey: \"AIzaSyA14cD51_IYnfmRyL_BxUrfp5q7mhbkyyc\",\r\n  authDomain: \"personal-24c21.firebaseapp.com\",\r\n  projectId: \"personal-24c21\",\r\n  storageBucket: \"personal-24c21.appspot.com\",\r\n  messagingSenderId: \"165295557630\",\r\n  appId: \"1:165295557630:web:cd002ca44b29c4f7154eaf\",\r\n  measurementId: \"G-B3WV4J8D5C\",\r\n};\r\n\r\nfirebase.initializeApp(config);\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}