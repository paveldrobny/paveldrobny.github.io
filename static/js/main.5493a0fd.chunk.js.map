{"version":3,"sources":["components/HelpMessages/Theme/Theme.js","components/HelpMessages/Theme/index.js","components/ProgressBar/ProgressBar.js","components/ProgressBar/index.js","components/Header/Header.js","components/Header/index.js","components/Slider/SliderButton.js","components/Slider/SliderPhoto.js","components/Loading/Loading.js","components/Loading/index.js","components/Slider/SliderDots.js","components/Slider/Slider.js","components/Slider/index.js","components/Cards/Card.js","components/Cards/Cards.js","components/Cards/index.js","components/Footer/Footer.js","components/Footer/index.js","App.js","reportWebVitals.js","index.js"],"names":["Theme","isActive","id","className","ProgressBar","value","styleType","style","width","Header","useState","percentage","setPercentage","localStorage","getItem","isDarkTheme","setDarkTheme","isMessageTheme","setMessageTheme","headerActive","store","setItem","getValue","bodyClass","document","body","classList","htmlClass","documentElement","add","remove","useEffect","window","addEventListener","scrollStart","scrollTop","scrollHeight","clientHeight","scrollY","onClick","SliderButton","icon","SliderPhoto","slider","index","currentT","backgroundImage","img","right","name","using","Loading","SliderDots","Slider","current","setCurrent","idT","class","isLeft","navButtons","sliders","setSliders","isSliderMove","setSliderMove","progress","setProgress","isLoading","setLoading","db","firebase","firestore","time","changeSlide","isBack","setTimeout","length","slidersData","collection","orderBy","get","then","querySnapshot","size","i","push","docs","data","forward","clearTimeout","map","navBtn","Card","card","language","update","target","isDemo","href","urlDemo","urlCode","Cards","cards","setCards","cardsData","forEach","doc","repo","result","urlUpdate","fetch","res","json","out","updated_at","slice","updateProjectData","repoName","Footer","setUpdate","links","commit","author","date","catch","err","link","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","ReactDOM","render","StrictMode","getElementById"],"mappings":"2XAceA,ICbAA,EDEf,YAA4B,IAAZC,EAAW,EAAXA,SACd,OACE,sBAAKC,GAAG,eAAeC,UAAWF,EAAW,SAAW,GAAxD,UACE,qBAAKC,GAAG,cAAR,wBACA,sBAAKA,GAAG,UAAR,0BACe,mBAAGC,UAAU,gBAD5B,qB,MEISC,ICVAA,EDEf,YAA4C,IAArBC,EAAoB,EAApBA,MAAOC,EAAa,EAAbA,UAC5B,OACE,qBAAKJ,GAAG,eAAR,SACE,qBAAKA,GAAG,gBAAgBC,UAAWG,EAAWC,MAAO,CAAEC,MAAM,GAAD,OAAKH,EAAL,WEgFnDI,ICrFAA,EDIf,WAAmB,IAAD,EACoBC,mBAAS,GAD7B,mBACTC,EADS,KACGC,EADH,OAEoBF,qBAClCG,aAAaC,QAAQ,gBAHP,mBAETC,EAFS,KAEIC,EAFJ,OAK0BN,oBACxCG,aAAaC,QAAQ,mBANP,mBAKTG,EALS,KAKOC,EALP,KASZC,EAAe,GA4BnB,SAASC,IACPP,aAAaQ,QAAQ,cAAeN,GACpCF,aAAaQ,QAAQ,iBAAkBJ,GAGzC,SAASK,IACP,IAAIC,EAAYC,SAASC,KAAKC,UAC5BC,EAAYH,SAASI,gBAAgBF,UAElCb,aAAaE,aAChBK,IAE0C,SAAxCP,aAAaC,QAAQ,gBACvBS,EAAUM,IAAI,aACdF,EAAUE,IAAI,aACdb,GAAa,IACoC,UAAxCH,aAAaC,QAAQ,iBAC9BS,EAAUO,OAAO,aACjBH,EAAUG,OAAO,aACjBd,GAAa,IAEgC,UAA3CH,aAAaC,QAAQ,mBACvBI,GAAgB,GAIpB,OApDAa,qBAAU,WACRT,OAGFU,OAAOC,iBAAiB,UAMxB,WACE,IAAIC,EACAV,SAASC,KAAKU,WAAaX,SAASI,gBAAgBO,UACtDC,EACEZ,SAASC,KAAKW,aAAeZ,SAASI,gBAAgBS,aAG1DzB,EADoBsB,EAAcE,EAAgB,QAVhDJ,OAAOM,SAAW,KACpBnB,GAAgB,UA8ChB,sBAAKjB,GAAG,SAASC,UAAWgB,EAA5B,UACE,cAAC,EAAD,CAAad,MAAOM,EAAYL,UAAW,YAC3C,sBAAKH,UAAU,cAAf,UACE,qBAAKA,UAAU,eAAf,0BACA,qBAAKA,UAAU,gBAAf,SACE,6BACE,oBAAID,GAAG,WAAWqC,QAvC5B,WACEnB,IACAF,GAAgB,GAChBI,KAoCQ,SACE,mBAAGnB,UAAU,yBAKrB,cAAC,EAAD,CAAcF,SAAUgB,Q,gBEvEfuB,MARf,YAA8C,IAAtBtC,EAAqB,EAArBA,GAAIuC,EAAiB,EAAjBA,KAAMF,EAAW,EAAXA,QAChC,OACE,wBAAQA,QAASA,EAASrC,GAAIA,EAA9B,SACE,mBAAGC,UAAWsC,OCgBLC,MAnBf,YAAmD,IAA5BC,EAA2B,EAA3BA,OAAQC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACpC,OACE,qBACE1C,UAAWyC,IAAUC,EAAW,sBAAwB,eACxDtC,MAAO,CACLuC,gBAAgB,OAAD,OAASH,EAAOI,IAAhB,KACfC,MAAM,GAAD,OAAgB,IAAXH,EAAL,MAJT,SAOE,qBAAK1C,UAAU,cAAf,SACE,sBAAKA,UAAU,cAAf,UACE,4BAAG,4BAAIwC,EAAOM,SADhB,UAEUN,EAAOO,c,MCLVC,ICRAA,EDEf,WACE,OACE,sBAAKhD,UAAU,eAAf,UAA8B,wBAAW,wBAAW,wBAAW,4BEOpDiD,MAVf,YAAiD,IAA5BR,EAA2B,EAA3BA,MAAOC,EAAoB,EAApBA,SAAUN,EAAU,EAAVA,QACpC,OACE,qBACEpC,UAAWyC,IAAUC,EAAW,qBAAuB,cACvDN,QAASA,KC6HAc,IClIAA,EDQf,WAAmB,IAAD,EACc3C,mBAAS,GADvB,mBACT4C,EADS,KACAC,EADA,OAEoB7C,mBAAS,CAC3C,CACE8C,IAAK,kBACLC,MAAO,sBACPC,QAAQ,GAEV,CACEF,IAAK,mBACLC,MAAO,uBACPC,QAAQ,KAXI,mBAETC,EAFS,aAccjD,mBAAS,KAdvB,mBAcTkD,EAdS,KAcAC,EAdA,OAesBnD,oBAAS,GAf/B,mBAeToD,EAfS,KAeKC,EAfL,OAgBgBrD,mBAAS,GAhBzB,mBAgBTsD,EAhBS,KAgBCC,EAhBD,OAiBgBvD,oBAAS,GAjBzB,mBAiBTwD,EAjBS,KAiBEC,EAjBF,KAkBVC,EAAKC,IAASC,YACdC,EAAO,IAqCb,SAASC,EAAYC,GACfX,IACFC,GAAc,GALhBW,YAAW,kBAAMX,GAAc,KAAO,KAQlCR,EADEkB,EACqB,IAAZnB,EAAgBM,EAAQe,OAAS,EAAIrB,EAAU,EAE/CA,IAAYM,EAAQe,OAAS,EAAI,EAAIrB,EAAU,IAKhE,OA/CAvB,qBAAU,WACR,IAAM6C,EAAc,GAEpBR,EAAGS,WAAW,YACXC,QAAQ,SAAU,OAClBC,MACAC,MAAK,SAACC,GAEL,IADA,IAAIC,EAAOD,EAAcC,KAChBC,EAAID,EAAO,EAAGC,GAAKD,EAAO,EAAGC,IACpCP,EAAYQ,KAAKH,EAAcI,KAAKF,GAAGG,QAEzCzB,EAAWe,GACXT,GAAW,QAEd,IAEHpC,qBAAU,WACR,IAAMwD,GAAWjC,EAAU,GAAKM,EAAQe,OAClCzE,EAAKwE,YAAW,kBAAMnB,EAAWgC,KAAUhB,GAEjD,OADAN,EAAY,GACL,kBAAMuB,aAAatF,MACzB,CAACoD,EAASM,EAAQe,SAErB5C,qBAAU,WACR,IAAM7B,EAAKwE,YACT,kBAAMT,EAAYD,EAAW,KAC7BO,IAEF,OAAO,kBAAMiB,aAAatF,MACzB,CAAC8D,IAmBF,qBAAK7D,UAAU,iBAAf,SACE,qBAAKA,UAAU,SAAf,SACG+D,EACC,cAAC,EAAD,IAEA,gCACE,qBAAK/D,UAAW,aAAhB,SACGwD,EAAW8B,KAAI,SAACC,EAAQ9C,GACvB,OACE,cAAC,EAAD,CAEE1C,GAAIwF,EAAOlC,IACXjB,QAAS,kBAAMiC,EAAYkB,EAAOhC,SAClCjB,KAAMiD,EAAOjC,OAHRb,QAQb,qBAAK1C,GAAG,eAAR,2BACA,qBAAKA,GAAG,kBAAR,SACE,cAAC,EAAD,CAAaG,MAAO2D,EAAU1D,UAAW,cAE3C,qBAAKJ,GAAG,mBAAR,SACG0D,EAAQ6B,KAAI,SAAC9C,EAAQC,GACpB,OACE,cAAC,EAAD,CAEEA,MAAOA,EACPD,OAAQA,EACRE,SAAUS,GAHLV,QAQb,qBAAK1C,GAAG,kBAAR,SACG0D,EAAQ6B,KAAI,SAAC9C,EAAQC,GACpB,OACE,cAAC,EAAD,CAEEA,MAAOA,EACPC,SAAUS,EACVf,QAAS,kBAAMgB,EAAWX,KAHrBA,gBE3EV+C,MAvCf,YAAyB,IAATC,EAAQ,EAARA,KACd,OACE,sBAAKzF,UAAU,OAAf,UACE,qBAAKA,UAAU,gBAAf,SACE,qBACEA,UAAU,WACVI,MAAO,CACLuC,gBAAgB,OAAD,OAAS8C,EAAK7C,IAAd,UAIrB,sBAAK5C,UAAU,oBAAf,UACE,qBAAKA,UAAU,aAAf,SAA4B,4BAAIyF,EAAK3C,SACrC,qBAAK9C,UAAU,YAAf,SACE,wCAAWyF,EAAK1C,MAAhB,SAEF,qBAAK/C,UAAU,YAAf,SACE,2CAAcyF,EAAKC,cAErB,qBAAK1F,UAAU,YAAf,SACE,yCAAYyF,EAAKE,YAEnB,sBAAK3F,UAAU,YAAf,UACE,mBACE4F,OAAO,SACP5F,UAAS,mBAAcyF,EAAKI,OAAS,aAAe,IACpDC,KAAML,EAAKM,QAHb,kBAOA,mBAAGH,OAAO,SAAS5F,UAAU,WAAW8F,KAAML,EAAKO,QAAnD,mC,MCuBKC,ICtDAA,EDIf,WAAkB,IAAD,EACW1F,mBAAS,IADpB,mBACR2F,EADQ,KACDC,EADC,OAEiB5F,oBAAS,GAF1B,mBAERwD,EAFQ,KAEGC,EAFH,KAGTC,EAAKC,IAASC,YAgCpB,OA9BAvC,qBAAU,WACR,IAAMwE,EAAY,GAElBnC,EAAGS,WAAW,YACXC,QAAQ,KAAM,QACdC,MACAC,MAAK,SAACC,GACLA,EAAcuB,SAAQ,SAACC,GACrBF,EAAUnB,KAAKqB,EAAInB,QAQ3B,SAA2BoB,EAAM9D,GAC/B,IAAI+D,EAAS,GACTC,EAAS,mDAA+CF,GAC5DG,MAAMD,GACH5B,MAAK,SAAC8B,GAAD,OAASA,EAAIC,UAClB/B,MAAK,SAACgC,GACLL,EAASK,EAAIC,WAAWC,MAAM,EAAG,IAEjC9C,EAAGS,WAAW,YAAY4B,IAAI7D,GAAOkD,OAAO,CAC1CA,OAAQa,OAhBRQ,CAAkBV,EAAInB,OAAO8B,SAAUX,EAAIvG,OAE7CoG,EAASC,GACTpC,GAAW,QAEd,IAiBD,qBAAKhE,UAAU,WAAf,SACE,kCACG+D,EACC,qBAAKhE,GAAG,eAAR,iCAEAmG,EAAMZ,KAAI,SAACG,EAAMhD,GACf,OAAO,cAAC,EAAD,CAAMgD,KAAMA,GAAWhD,W,MEL3ByE,ICzCAA,EDEf,WACE,IADgB,EAIY3G,mBAAS,cAJrB,mBAIToF,EAJS,KAIDwB,EAJC,OAKU5G,mBAAS,CACjC,CAAEuF,KAAM,yBAA0BxC,MAAO,aACzC,CAAEwC,KAAM,iCAAkCxC,MAAO,mBAPnC,mBAKT8D,EALS,KAuBhB,OAvBgB,KAUhBxF,qBAAU,WACR,IAAI4E,EAAS,GACb,OAAOE,MAVP,oFAWG7B,MAAK,SAAC8B,GAAD,OAASA,EAAIC,UAClB/B,MAAK,SAACgC,GACLL,EAASK,EAAIQ,OAAOA,OAAOC,OAAOC,KAAKR,MAAM,EAAG,IAChDI,EAAUX,MAEXgB,OAAM,SAACC,GACN,OAAOA,QAKX,mCACI,sBAAK1H,GAAG,aAAR,qBAA8B4F,KAC9B,qBAAK5F,GAAG,cAAR,SACGqH,EAAM9B,KAAI,SAACoC,EAAMjF,GAChB,OACE,mBAAeqD,KAAM4B,EAAK5B,KAA1B,SACI,mBAAG9F,UAAW0H,EAAKpE,SADfb,YEfPkF,MAXf,WACE,OACE,sBAAK3H,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,QCAS4H,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBjD,MAAK,YAAkD,IAA/CkD,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCUd3D,IAASkE,cAVI,CACXC,OAAQ,0CACRC,WAAY,iCACZC,UAAW,iBACXC,cAAe,6BACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAMjBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFzH,SAAS0H,eAAe,SAM1BnB,M","file":"static/js/main.5493a0fd.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Theme.css\";\r\n\r\nfunction Theme({isActive}) {\r\n  return (\r\n    <div id=\"themeMessage\" className={isActive ? \"active\" : \"\"}>\r\n      <div id=\"msgTextMain\">Dark theme</div>\r\n      <div id=\"msgText\">\r\n        Click on the <i className=\"fas fa-moon\"></i> to switch.\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Theme;\r\n","import Theme from \"./Theme\"\r\nexport default Theme;","import React from \"react\";\r\nimport \"./ProgressBar.css\";\r\n\r\nfunction ProgressBar({ value, styleType }) {\r\n  return (\r\n    <div id=\"progressCont\">\r\n      <div id=\"progressValue\" className={styleType} style={{ width: `${value}%` }}></div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProgressBar;\r\n","import ProgressBar from \"./ProgressBar\"\r\nexport default ProgressBar","import React, { useState, useEffect } from \"react\";\r\nimport \"./Header.css\";\r\nimport ThemeMessage from \"../HelpMessages/Theme\";\r\nimport ProgressBar from \"../ProgressBar\";\r\n\r\nfunction Header() {\r\n  const [percentage, setPercentage] = useState(0);\r\n  const [isDarkTheme, setDarkTheme] = useState(\r\n    localStorage.getItem(\"isDarkTheme\") ? true : false\r\n  );\r\n  const [isMessageTheme, setMessageTheme] = useState(\r\n    localStorage.getItem(\"isMessageTheme\") ? false : true\r\n  );\r\n\r\n  let headerActive = \"\";\r\n\r\n  useEffect(() => {\r\n    getValue();\r\n  });\r\n\r\n  window.addEventListener(\"scroll\", handleScroll);\r\n\r\n  if (window.scrollY >= 15) {\r\n    headerActive += \"active\";\r\n  }\r\n\r\n  function handleScroll() {\r\n    let scrollStart =\r\n        document.body.scrollTop || document.documentElement.scrollTop,\r\n      scrollHeight =\r\n        document.body.scrollHeight - document.documentElement.clientHeight;\r\n\r\n    let percentValue = (scrollStart / scrollHeight) * 100;\r\n    setPercentage(percentValue);\r\n  }\r\n\r\n  function changeTheme() {\r\n    store();\r\n    setMessageTheme(false);\r\n    getValue();\r\n  }\r\n\r\n  function store() {\r\n    localStorage.setItem(\"isDarkTheme\", isDarkTheme);\r\n    localStorage.setItem(\"isMessageTheme\", isMessageTheme);\r\n  }\r\n\r\n  function getValue() {\r\n    let bodyClass = document.body.classList,\r\n      htmlClass = document.documentElement.classList;\r\n\r\n    if (!localStorage.isDarkTheme) {\r\n      store();\r\n    }\r\n    if (localStorage.getItem(\"isDarkTheme\") === \"true\") {\r\n      bodyClass.add(\"darkTheme\");\r\n      htmlClass.add(\"darkTheme\");\r\n      setDarkTheme(false);\r\n    } else if (localStorage.getItem(\"isDarkTheme\") === \"false\") {\r\n      bodyClass.remove(\"darkTheme\");\r\n      htmlClass.remove(\"darkTheme\");\r\n      setDarkTheme(true);\r\n    }\r\n    if (localStorage.getItem(\"isMessageTheme\") === \"false\") {\r\n      setMessageTheme(false);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div id=\"header\" className={headerActive}>\r\n      <ProgressBar value={percentage} styleType={\"headerV\"}/>\r\n      <div className=\"header-cont\">\r\n        <div className=\"header-title\">Pavel Drobny</div>\r\n        <div className=\"header-navBtn\">\r\n          <ul>\r\n            <li id=\"themeBtn\" onClick={changeTheme}>\r\n              <i className=\"fas fa-moon\"></i>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n      <ThemeMessage isActive={isMessageTheme}></ThemeMessage>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import Header from './Header';\r\nexport default Header;","import React from \"react\";\r\n\r\nfunction SliderButton({ id, icon, onClick }) {\r\n  return (\r\n    <button onClick={onClick} id={id}>\r\n      <i className={icon}></i>\r\n    </button>\r\n  );\r\n}\r\n\r\nexport default SliderButton;\r\n","import React from \"react\";\r\n\r\nfunction SliderPhoto({ slider, index, currentT }) {\r\n  return (\r\n    <div\r\n      className={index === currentT ? \"slider-image active\" : \"slider-image\"}\r\n      style={{\r\n        backgroundImage: `url(${slider.img})`,\r\n        right: `${currentT * 100}%`,\r\n      }}\r\n    >\r\n      <div className=\"projectInfo\">\r\n        <div className=\"projectName\">\r\n          <i><b>{slider.name}</b></i>\r\n          Using: {slider.using}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SliderPhoto;\r\n","import React from \"react\";\r\nimport \"./Loading.css\";\r\n\r\nfunction Loading() {\r\n  return (\r\n    <div className=\"lds-ellipsis\"><div></div><div></div><div></div><div></div></div>\r\n  );\r\n}\r\n\r\nexport default Loading;\r\n","import Loading from \"./Loading\"\r\nexport default Loading;","import React from \"react\";\r\n\r\nfunction SliderDots({index, currentT, onClick}) {\r\n  return (\r\n    <div\r\n      className={index === currentT ? \"slider-dots active\" : \"slider-dots\"}\r\n      onClick={onClick}\r\n    >\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SliderDots;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./Slider.css\";\r\nimport firebase from \"firebase\";\r\nimport SliderButton from \"./SliderButton\";\r\nimport SliderPhoto from \"./SliderPhoto\";\r\nimport Loading from \"../Loading\";\r\nimport SliderDots from \"./SliderDots\";\r\nimport ProgressBar from \"../ProgressBar\";\r\n\r\nfunction Slider() {\r\n  const [current, setCurrent] = useState(0);\r\n  const [navButtons, setNavButtons] = useState([\r\n    {\r\n      idT: \"silder-btn-left\",\r\n      class: \"fas fa-chevron-left\",\r\n      isLeft: true,\r\n    },\r\n    {\r\n      idT: \"silder-btn-right\",\r\n      class: \"fas fa-chevron-right\",\r\n      isLeft: false,\r\n    },\r\n  ]);\r\n  const [sliders, setSliders] = useState([]);\r\n  const [isSliderMove, setSliderMove] = useState(true);\r\n  const [progress, setProgress] = useState(1);\r\n  const [isLoading, setLoading] = useState(true);\r\n  const db = firebase.firestore();\r\n  const time = 5000;\r\n\r\n  useEffect(() => {\r\n    const slidersData = [];\r\n\r\n    db.collection(\"Projects\")\r\n      .orderBy(\"update\", \"asc\")\r\n      .get()\r\n      .then((querySnapshot) => {\r\n        let size = querySnapshot.size;\r\n        for (let i = size - 1; i >= size - 2; i--) {\r\n          slidersData.push(querySnapshot.docs[i].data())\r\n        }\r\n        setSliders(slidersData);\r\n        setLoading(false);\r\n      });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const forward = (current + 1) % sliders.length;\r\n    const id = setTimeout(() => setCurrent(forward), time);\r\n    setProgress(0);\r\n    return () => clearTimeout(id);\r\n  }, [current, sliders.length]);\r\n\r\n  useEffect(() => {\r\n    const id = setTimeout(\r\n      () => setProgress(progress + 1),\r\n      time / 100 - time / 1000\r\n    );\r\n    return () => clearTimeout(id);\r\n  }, [progress]);\r\n\r\n  function sliderTimer() {\r\n    setTimeout(() => setSliderMove(true), 500);\r\n  }\r\n\r\n  function changeSlide(isBack) {\r\n    if (isSliderMove) {\r\n      setSliderMove(false);\r\n      sliderTimer();\r\n      if (isBack) {\r\n        setCurrent(current === 0 ? sliders.length - 1 : current - 1);\r\n      } else {\r\n        setCurrent(current === sliders.length - 1 ? 0 : current + 1);\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"slider-content\">\r\n      <div className=\"slider\">\r\n        {isLoading ? (\r\n          <Loading />\r\n        ) : (\r\n          <div>\r\n            <div className={\"slider-btn\"}>\r\n              {navButtons.map((navBtn, index) => {\r\n                return (\r\n                  <SliderButton\r\n                    key={index}\r\n                    id={navBtn.idT}\r\n                    onClick={() => changeSlide(navBtn.isLeft)}\r\n                    icon={navBtn.class}\r\n                  ></SliderButton>\r\n                );\r\n              })}\r\n            </div>\r\n            <div id=\"slider-title\">Lates updates</div>\r\n            <div id=\"progressWrapper\">\r\n              <ProgressBar value={progress} styleType={\"sliderV\"} />\r\n            </div>\r\n            <div id=\"slider-imageCont\">\r\n              {sliders.map((slider, index) => {\r\n                return (\r\n                  <SliderPhoto\r\n                    key={index}\r\n                    index={index}\r\n                    slider={slider}\r\n                    currentT={current}\r\n                  ></SliderPhoto>\r\n                );\r\n              })}\r\n            </div>\r\n            <div id=\"slider-dotsCont\">\r\n              {sliders.map((slider, index) => {\r\n                return (\r\n                  <SliderDots\r\n                    key={index}\r\n                    index={index}\r\n                    currentT={current}\r\n                    onClick={() => setCurrent(index)}\r\n                  ></SliderDots>\r\n                );\r\n              })}\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Slider;\r\n","import Slider from './Slider';\r\nexport default Slider;","import React from \"react\";\r\n\r\nfunction Card({ card }) {\r\n  return (\r\n    <div className=\"card\">\r\n      <div className=\"card_img_Cont\">\r\n        <div\r\n          className=\"card-img\"\r\n          style={{\r\n            backgroundImage: `url(${card.img})`,\r\n          }}\r\n        ></div>\r\n      </div>\r\n      <div className=\"card_view_content\">\r\n        <div className=\"card_title\"><i>{card.name}</i></div>\r\n        <div className=\"card_info\">\r\n          <b>Using: {card.using} </b>\r\n        </div>\r\n        <div className=\"card_info\">\r\n          <b>Language: {card.language}</b>\r\n        </div>\r\n        <div className=\"card_info\">\r\n          <b>Update: {card.update}</b>\r\n        </div>\r\n        <div className=\"card_view\">\r\n          <a\r\n            target=\"_blank\"\r\n            className={`btn_Demo ${card.isDemo ? \"activeDemo\" : \"\"}`}\r\n            href={card.urlDemo}\r\n          >\r\n            DEMO\r\n          </a>\r\n          <a target=\"_blank\" className=\"btn_Code\" href={card.urlCode}>\r\n            SOURCE CODE\r\n          </a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Card;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport firebase from \"firebase\";\r\nimport Card from \"./Card\";\r\nimport \"./Card.css\";\r\n\r\nfunction Cards() {\r\n  const [cards, setCards] = useState([]);\r\n  const [isLoading, setLoading] = useState(true);\r\n  const db = firebase.firestore();\r\n\r\n  useEffect(() => {\r\n    const cardsData = [];\r\n\r\n    db.collection(\"Projects\")\r\n      .orderBy(\"id\", \"desc\")\r\n      .get()\r\n      .then((querySnapshot) => {\r\n        querySnapshot.forEach((doc) => {\r\n          cardsData.push(doc.data());\r\n          updateProjectData(doc.data().repoName, doc.id);\r\n        });\r\n        setCards(cardsData);\r\n        setLoading(false);\r\n      });\r\n  }, []);\r\n\r\n  function updateProjectData(repo, index) {\r\n    let result = \"\";\r\n    let urlUpdate = `https://api.github.com/repos/paveldrobny/${repo}`;\r\n    fetch(urlUpdate)\r\n      .then((res) => res.json())\r\n      .then((out) => {\r\n        result = out.updated_at.slice(0, 10);\r\n        \r\n        db.collection(\"Projects\").doc(index).update({\r\n          update: result,\r\n        });\r\n      });\r\n  }\r\n\r\n  return (\r\n    <div className=\"projects\">\r\n      <section>\r\n        {isLoading ? (\r\n          <div id=\"cardsLoading\">Loading projects...</div>\r\n        ) : (\r\n          cards.map((card, index) => {\r\n            return <Card card={card} key={index}></Card>;\r\n          })\r\n        )}\r\n      </section>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Cards;\r\n","import Cards from \"./Cards\"\r\nexport default Cards;","import React, { useState, useEffect } from \"react\";\r\nimport \"./Footer.css\";\r\n\r\nfunction Footer() {\r\n  const urlUpdate =\r\n    \"https://api.github.com/repos/paveldrobny/paveldrobny.github.io/branches/gh-pages\";\r\n\r\n  const [update, setUpdate] = useState(\"0000/00/00\");\r\n  const [links, setLinks] = useState([\r\n    { href: \"https://vk.com/pdrobny\", class: \"fab fa-vk\" },\r\n    { href: \"https://github.com/paveldrobny\", class: \"fab fa-github\" },\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    let result = \"\";\r\n    return fetch(urlUpdate)\r\n      .then((res) => res.json())\r\n      .then((out) => {\r\n        result = out.commit.commit.author.date.slice(0, 10);\r\n        setUpdate(result);\r\n      })\r\n      .catch((err) => {\r\n        return err;\r\n      });\r\n  });\r\n\r\n  return (\r\n    <footer>\r\n        <div id=\"updateSite\">Update: {update}</div>\r\n        <div id=\"footer_Cont\">\r\n          {links.map((link, index) => {\r\n            return (\r\n              <a key={index} href={link.href}>\r\n                  <i className={link.class}></i>\r\n              </a>\r\n            );\r\n          })}\r\n        </div>\r\n    </footer>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import Footer from \"./Footer\";\r\nexport default Footer;","import \"./App.css\";\r\nimport Header from \"./components/Header\"\r\nimport Slider from \"./components/Slider\";\r\nimport Cards from \"./components/Cards\";\r\nimport Footer from \"./components/Footer\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Header />\r\n      <Slider />\r\n      <Cards />\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport \"firebase/firestore\";\r\nimport firebase from \"firebase\";\r\n\r\nvar config = {\r\n  apiKey: \"AIzaSyA14cD51_IYnfmRyL_BxUrfp5q7mhbkyyc\",\r\n  authDomain: \"personal-24c21.firebaseapp.com\",\r\n  projectId: \"personal-24c21\",\r\n  storageBucket: \"personal-24c21.appspot.com\",\r\n  messagingSenderId: \"165295557630\",\r\n  appId: \"1:165295557630:web:cd002ca44b29c4f7154eaf\",\r\n  measurementId: \"G-B3WV4J8D5C\",\r\n};\r\n\r\nfirebase.initializeApp(config);\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}